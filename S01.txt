1.5p 1 midterm test - 8th week(ish) - milestone
based on everything until databases
1.5p another in the last week from everything that remains
2p - ongoing activity - proactive evaluation
*2 evaluations at minimum - 2 10s = 2p, 1 single 10 = 5 which is 1p
more than 2 eval > take first 2 biggest grades into account


70% attendance is mandatory, roughly 10 or 11 participations to enter the final exam
2.5 points minimum on seminar mandatory to enter the final exam

61073 - seminar ID


1 single project in the seminar, shared on GitHub
practical test starts from GitHub repo
cd Downloads
git clone https://github.com/mihaidoinea/DMA2025.git
to update: go inside the folder, run a command prompt and do git pull
manually in cmd: D:
cd D:\ASE\Y3+\Android\DMA2025
git pull

SDK ver 
build tools ver

Android Studio Narwhal 3 Feature Drop | 2025.1.3 ALWAYS up to date

Settings > search for proxy (for ASE PC) > auto-detect > apply
3 dots > SDK manager > Android 16.0 Baklava with API level (SDK) 36 REVISION 2, the one below in the list, not the latest.
			> Android 15.0 SDK Platform 35
			> Sources for Android 35
			> system image -> depending on architecture of machine (intel x86_64 atom system image / google play intel 64 which contains firebase for the end of 				seminar)
			> Android 9.0 SDK Platform 28
36 = android 16.0, 35 = android 15.0

SDK TOOLS: 35.0.1 (LATEST VERSION OF BUILD TOOLS FOR THAT SPECIFIC SDK)
NDK Tool - fast code that runs on the bottom of the operating system stack - native development kit - C/C++/Assembly
	 - useful for extensive tasks to move the load from Java/Kotlin to low level languages
	 - not needed
Android SDK Command Line tools - latest
CMake - not needed but always the latest
Android emulator - 
Hypervisor driver
SDK Platform-Tools - command line

about section on smartphone, click on kernel version multiple times, this will enable developing mode (to test the ongoing app)
to use a virtual device instead, you will need:
1. Hardware profile       > AVD
2. Operating system image > AVD

gradle > compiles code and resources into an .apk archive which can be installed on the Android device.

Troubleshooting emulator (the AVD):
cold boot > wipe data > delete

 